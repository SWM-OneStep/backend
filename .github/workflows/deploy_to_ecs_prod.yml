name: Deploy to ECS Prod

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Dockerfile Path
        id: dockerfile-path
        run: |
          echo "DOCKERFILE_PATH=Dockerfile.prod" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -f ${{ env.DOCKERFILE_PATH }} -t ${{ secrets.ECR_REPOSITORY_NAME_PROD }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY_NAME_PROD }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME_PROD }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME_PROD }}:latest

      - name: Render ECS task definition
        run: |
          python render_ecs_task_definition.py --aws_account_id ${{ secrets.AWS_ACCOUNT_ID }} --aws_region ${{ secrets.AWS_REGION }} --ecr_repository_name ${{ secrets.ECR_REPOSITORY_NAME_PROD }} --aws_secret_name ${{ secrets.AWS_SECRET_NAME }} --aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --aws_secret_name_prod ${{ secrets.AWS_SECRET_NAME_PROD }} --aws_region_name ${{ secrets.AWS_REGION_NAME }}

      - name: Register ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          container-name: onestep-prod
          image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME_PROD }}:latest

      - name: Deploy to ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE_NAME_PROD }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME_PROD }}
          wait-for-service-stability: false

      - name: Update version.txt
        run: |
          VERSION=$(date +'%Y.%m.%d.%H.%M.%S')  # Y.M.D.H.M.S 형식으로 버전 생성
          echo "${VERSION}" > version.txt

      - name: Commit version update
        run: |
          git config --global user.name ${{ secrets.GIT_USER_NAME }}
          git config --global user.email ${{ secrets.GIT_USER_EMAIL }}
          git add version.txt
          git commit -m "Update version to ${VERSION}"
          git push https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/SWM-OneStep/backend.git develop
