name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

       - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Decode SSH key
        run: |
          echo "${{ secrets.EC2_KEY_PAIR_PRIVATE_KEY_BASE64 }}" | base64 -d > onestep_alpha.pem
          chmod 600 onestep_alpha.pem

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          . venv/bin/activate
          python manage.py migrate

      - name: Run tests
        run: |
          . venv/bin/activate
          pytest .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

      - name: Deploy to production
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # OTHER_ENV_VAR: ${{ secrets.OTHER_ENV_VAR }}
        run: |
          . venv/bin/activate
          # 여기에 배포 스크립트를 추가합니다.
          # 예를 들어, 서버에 SSH를 통해 파일을 전송하거나 Docker를 사용하여 배포합니다.
          echo "Deploying application..."
